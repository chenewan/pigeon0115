#DB Configuration:

#数据源1
spring.datasource.db1.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.db1.url=jdbc:sqlserver://192.168.0.9\\WINCC:1433;DatabaseName=pigeon
#spring.datasource.db1.url=jdbc:sqlserver://192.168.0.200\\WINCC:1433;DatabaseName=pigeon
#spring.datasource.db1.url=jdbc:sqlserver://chenlisong.iok.la\\WINCC:1433;DatabaseName=pigeon

spring.datasource.db1.username=byd
spring.datasource.db1.password=byd

#数据源2
spring.datasource.db2.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.db2.url=jdbc:sqlserver://192.168.0.8\\WINCC:1433;DatabaseName=pigeon
#spring.datasource.db2.url=jdbc:sqlserver://192.168.0.201:1433;DatabaseName=pigeon
#spring.datasource.db2.url=jdbc:sqlserver://47.94.224.92:1433;DatabaseName=pigeon
spring.datasource.db2.username=byd
spring.datasource.db2.password=byd

#数据源3
spring.datasource.db3.driverClassName=com.mysql.jdbc.Driver
spring.datasource.db3.url=jdbc:mysql://192.168.0.7:3306/table1?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db3.url=jdbc:mysql://192.168.0.201:3306/table1?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db3.url=jdbc:mysql://chenlisong.iok.la:3306/table1?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.db3.username=root
spring.datasource.db3.password=Beyond88089880

#数据源4
spring.datasource.db4.driverClassName=com.mysql.jdbc.Driver
spring.datasource.db4.url=jdbc:mysql://192.168.0.7:3306/table2?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db4.url=jdbc:mysql://192.168.0.201:3306/table2?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db4.url=jdbc:mysql://chenlisong.iok.la:3306/table2?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.db4.username=root
spring.datasource.db4.password=Beyond88089880

#数据源5
spring.datasource.db5.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db5.url=jdbc:mysql://192.168.0.7:3306/table3?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db5.url=jdbc:mysql://192.168.0.201:3306/table3?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
#spring.datasource.db5.url=jdbc:mysql://chenlisong.iok.la:3306/table3?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.db5.username=root
spring.datasource.db5.password=Beyond88089880




logging.level.com.byd=DEBUG
#端口号
server.port=8094

mybatis.mapper-locations=classpath*:mapper/*.xml
#起别名。可省略写mybatis的xml中的resultType的全路径
mybatis.type-aliases-package=com.byd.emg.pojo
logging.file=D:\\myLog\\myLog.log


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
initialSize: 5
minIdle: 10
maxActive: 1000
#配置获取连接等待超时的时间
maxWait: 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
timeBetweenEvictionRunsMillis: 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
minEvictableIdleTimeMillis: 300000
#验证连接是否有效。此参数必须设置为非空字符串，下面三项设置成true才能生效
validationQuery: SELECT 1
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
testWhileIdle: true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
testOnBorrow: true
#指明是否在归还到池中前进行检验
testOnReturn: false
#打开PSCache，并且指定每个连接上PSCache的大小
poolPreparedStatements: true

#文件上传的必须的配置，不然扫描不到bean
spring.thymeleaf.cache=false
prop.upload-folder=files

